(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["devworkspace-client"] = factory();
	else
		root["devworkspace-client"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/browser/che-api.ts":
/*!********************************!*\
  !*** ./src/browser/che-api.ts ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * Copyright (c) 2018-2021 Red Hat, Inc.
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *   Red Hat, Inc. - initial API and implementation
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RestCheApi = void 0;
const helper_1 = __webpack_require__(/*! ../common/helper */ "./src/common/helper.ts");
const common_1 = __webpack_require__(/*! ../common */ "./src/common/index.ts");
const models_1 = __webpack_require__(/*! ../common/models */ "./src/common/models.ts");
const helper_2 = __webpack_require__(/*! ./helper */ "./src/browser/helper.ts");
class RestCheApi {
    constructor(axios) {
        this.projectInitRequestTimeoutMs = 10000;
        this.projectRequestDelayMs = 100;
        this.axios = axios;
    }
    set config(axios) {
        this.axios = axios;
    }
    initializeNamespace(namespace) {
        return __awaiter(this, void 0, void 0, function* () {
            const isOpenShift = yield helper_2.isOpenShiftCluster(this.axios);
            if (isOpenShift) {
                const doesProjectAlreadyExist = yield this.doesProjectExist(namespace);
                if (!doesProjectAlreadyExist) {
                    this.createProject(namespace);
                    yield this.waitForProjectToBeReady(namespace);
                }
            }
        });
    }
    doesProjectExist(projectName) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const projects = yield this.axios.get(`/apis/${common_1.projectApiGroup}/v1/${common_1.projectsId}`);
                for (const proj of projects.data.items) {
                    if (proj.metadata.name === projectName) {
                        return true;
                    }
                }
                return false;
            }
            catch (e) {
                return false;
            }
        });
    }
    createProject(namespace) {
        this.axios.post(`/apis/${common_1.projectApiGroup}/v1/${common_1.projectRequestId}`, models_1.projectRequestModel(namespace));
    }
    waitForProjectToBeReady(namespace) {
        return __awaiter(this, void 0, void 0, function* () {
            let millisecondsAttempted = 0;
            let request = yield this.doesProjectExist(namespace);
            while (millisecondsAttempted < this.projectInitRequestTimeoutMs && !request) {
                request = yield this.doesProjectExist(namespace);
                yield helper_1.delay(this.projectRequestDelayMs);
                millisecondsAttempted += this.projectRequestDelayMs;
            }
            if (millisecondsAttempted >= this.projectInitRequestTimeoutMs) {
                throw new Error(`Project ${namespace} could not be initialized in ${this.projectInitRequestTimeoutMs / 1000} seconds`);
            }
        });
    }
}
exports.RestCheApi = RestCheApi;


/***/ }),

/***/ "./src/browser/helper.ts":
/*!*******************************!*\
  !*** ./src/browser/helper.ts ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * Copyright (c) 2018-2021 Red Hat, Inc.
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *   Red Hat, Inc. - initial API and implementation
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BrowserRequestError = exports.findApi = exports.isOpenShiftCluster = void 0;
const common_1 = __webpack_require__(/*! ../common */ "./src/common/index.ts");
function isOpenShiftCluster(axios) {
    return __awaiter(this, void 0, void 0, function* () {
        return findApi(axios, common_1.projectApiGroup);
    });
}
exports.isOpenShiftCluster = isOpenShiftCluster;
function findApi(axios, apiName, version) {
    return __awaiter(this, void 0, void 0, function* () {
        const resp = yield axios.get('/apis');
        const responseData = yield resp.data.groups;
        return responseData.filter((apiGroup) => {
            if (version) {
                return apiGroup.name === apiName && apiGroup.versions.filter(versionGroup => versionGroup.version === version).length > 0;
            }
            return apiGroup.name === apiName;
        }).length > 0;
    });
}
exports.findApi = findApi;
class BrowserRequestError {
    constructor(error) {
        if (error.code) {
            this.status = Number(error.code);
        }
        this.name = error.name;
        this.config = error.config;
        if (error.request) {
            this.request = error.request;
        }
        if (error.response) {
            this.response = error.response;
        }
        if ((this.status === -1 || !this.status) && (!this.response || (this.response && !this.response.status))) {
            // request is interrupted, there is not even an error
            this.message = `network issues occured while requesting "${this.config.url}".`;
        }
        else if (this.response && this.response.data && this.response.data.message) {
            // che Server error that should be self-descriptive
            this.message = this.response.data.message;
        }
        else {
            // the error is not from Che Server, so error may be in html format that we're not able to handle.
            // displaying just a error code and URL.
            // sometimes status won't be defined, so when it's not look into the response status more info
            let status = this.status;
            if (!this.status && this.response && this.response.status) {
                status = this.response.status;
                // defer to the status code of the request if there is no response
            }
            else if (!this.status && this.request && this.request.status) {
                status = this.request.status;
            }
            this.message = `"${status}" returned by "${this.config.url}"."`;
        }
    }
}
exports.BrowserRequestError = BrowserRequestError;


/***/ }),

/***/ "./src/browser/index.ts":
/*!******************************!*\
  !*** ./src/browser/index.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * Copyright (c) 2018-2021 Red Hat, Inc.
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *   Red Hat, Inc. - initial API and implementation
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RestApi = void 0;
const common_1 = __webpack_require__(/*! ../common */ "./src/common/index.ts");
const helper_1 = __webpack_require__(/*! ./helper */ "./src/browser/helper.ts");
const template_api_1 = __webpack_require__(/*! ./template-api */ "./src/browser/template-api.ts");
const che_api_1 = __webpack_require__(/*! ./che-api */ "./src/browser/che-api.ts");
const workspace_api_1 = __webpack_require__(/*! ./workspace-api */ "./src/browser/workspace-api.ts");
class RestApi {
    constructor(axios) {
        this._axios = axios;
        this._devworkspaceApi = new workspace_api_1.RestDevWorkspaceApi(axios);
        this._templateApi = new template_api_1.RestDevWorkspaceTemplateApi(axios);
        this._cheApi = new che_api_1.RestCheApi(axios);
    }
    set config(axios) {
        this._axios = axios;
    }
    get devworkspaceApi() {
        return this._devworkspaceApi;
    }
    get templateApi() {
        return this._templateApi;
    }
    get cheApi() {
        return this._cheApi;
    }
    isDevWorkspaceApiEnabled() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.apiEnabled !== undefined) {
                return Promise.resolve(this.apiEnabled);
            }
            this.apiEnabled = yield helper_1.findApi(this._axios, common_1.devWorkspaceApiGroup, common_1.devworkspaceVersion);
            return this.apiEnabled;
        });
    }
}
exports.RestApi = RestApi;


/***/ }),

/***/ "./src/browser/template-api.ts":
/*!*************************************!*\
  !*** ./src/browser/template-api.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * Copyright (c) 2018-2021 Red Hat, Inc.
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *   Red Hat, Inc. - initial API and implementation
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RestDevWorkspaceTemplateApi = void 0;
const common_1 = __webpack_require__(/*! ../common */ "./src/common/index.ts");
const helper_1 = __webpack_require__(/*! ./helper */ "./src/browser/helper.ts");
class RestDevWorkspaceTemplateApi {
    constructor(axios) {
        this._axios = axios;
    }
    set config(axios) {
        this._axios = axios;
    }
    ;
    listInNamespace(namespace) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const resp = yield this._axios.get(`/apis/${common_1.devWorkspaceApiGroup}/${common_1.devworkspaceVersion}/namespaces/${namespace}/${common_1.devworkspaceTemplateSubresource}`);
                return resp.data.items;
            }
            catch (e) {
                return Promise.reject(new helper_1.BrowserRequestError(e));
            }
        });
    }
    getByName(namespace, name) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const resp = yield this._axios.get(`/apis/${common_1.devWorkspaceApiGroup}/${common_1.devworkspaceVersion}/namespaces/${namespace}/${common_1.devworkspaceTemplateSubresource}/${name}`);
                return resp.data;
            }
            catch (e) {
                return Promise.reject(new helper_1.BrowserRequestError(e));
            }
        });
    }
    create(devworkspaceTemplate) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const resp = yield this._axios.post(`/apis/${common_1.devWorkspaceApiGroup}/${common_1.devworkspaceVersion}/namespaces/${devworkspaceTemplate.metadata.namespace}/${common_1.devworkspaceTemplateSubresource}`, devworkspaceTemplate, {
                    headers: {
                        'content-type': 'application/json; charset=utf-8',
                    },
                });
                return resp.data;
            }
            catch (e) {
                return Promise.reject(new helper_1.BrowserRequestError(e));
            }
        });
    }
    delete(namespace, name) {
        return __awaiter(this, void 0, void 0, function* () {
            this._axios.delete(`/apis/${common_1.devWorkspaceApiGroup}/${common_1.devworkspaceVersion}/namespaces/${namespace}/${common_1.devworkspaceTemplateSubresource}/${name}`);
        });
    }
}
exports.RestDevWorkspaceTemplateApi = RestDevWorkspaceTemplateApi;


/***/ }),

/***/ "./src/browser/workspace-api.ts":
/*!**************************************!*\
  !*** ./src/browser/workspace-api.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * Copyright (c) 2018-2021 Red Hat, Inc.
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *   Red Hat, Inc. - initial API and implementation
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RestDevWorkspaceApi = void 0;
const converter_1 = __webpack_require__(/*! ../common/converter */ "./src/common/converter.ts");
const models_1 = __webpack_require__(/*! ../common/models */ "./src/common/models.ts");
const helper_1 = __webpack_require__(/*! ../common/helper */ "./src/common/helper.ts");
const common_1 = __webpack_require__(/*! ../common */ "./src/common/index.ts");
const helper_2 = __webpack_require__(/*! ./helper */ "./src/browser/helper.ts");
class RestDevWorkspaceApi {
    constructor(axios) {
        this._axios = axios;
    }
    set config(axios) {
        this._axios = axios;
    }
    ;
    listInNamespace(namespace) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const resp = yield this._axios.get(`/apis/${common_1.devWorkspaceApiGroup}/${common_1.devworkspaceVersion}/namespaces/${namespace}/${common_1.devworkspacePluralSubresource}`);
                return resp.data.items;
            }
            catch (e) {
                return Promise.reject(new helper_2.BrowserRequestError(e));
            }
        });
    }
    getByName(namespace, name) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const resp = yield this._axios.get(`/apis/${common_1.devWorkspaceApiGroup}/${common_1.devworkspaceVersion}/namespaces/${namespace}/${common_1.devworkspacePluralSubresource}/${name}`);
                return resp.data;
            }
            catch (e) {
                return Promise.reject(new helper_2.BrowserRequestError(e));
            }
        });
    }
    create(devfile, routingClass, started = true) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const devworkspace = converter_1.devfileToDevWorkspace(devfile, routingClass, started);
                const stringifiedDevWorkspace = JSON.stringify(devworkspace);
                const resp = yield this._axios.post(`/apis/${common_1.devWorkspaceApiGroup}/${common_1.devworkspaceVersion}/namespaces/${devfile.metadata.namespace}/${common_1.devworkspacePluralSubresource}`, stringifiedDevWorkspace, {
                    headers: {
                        'content-type': 'application/json; charset=utf-8',
                    },
                });
                const responseData = yield resp.data;
                const namespace = responseData.metadata.namespace;
                const name = responseData.metadata.name;
                // we need to wait until the devworkspace has a status property
                let found;
                let count = 0;
                while (count < 5 && !found) {
                    const potentialWorkspace = yield this.getByName(namespace, name);
                    if (potentialWorkspace === null || potentialWorkspace === void 0 ? void 0 : potentialWorkspace.status) {
                        found = potentialWorkspace;
                    }
                    else {
                        count += 1;
                        helper_1.delay();
                    }
                }
                if (!found) {
                    throw new Error(`Was not able to find a devworkspace with name ${name} in namespace ${namespace}`);
                }
                return found;
            }
            catch (e) {
                return Promise.reject(new helper_2.BrowserRequestError(e));
            }
        });
    }
    update(devworkspace) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const name = devworkspace.metadata.name;
                const namespace = devworkspace.metadata.namespace;
                const resp = yield this._axios.put(`/apis/${common_1.devWorkspaceApiGroup}/${common_1.devworkspaceVersion}/namespaces/${namespace}/${common_1.devworkspacePluralSubresource}/${name}`, devworkspace, {
                    headers: {
                        'content-type': 'application/json; charset=utf-8',
                    },
                });
                return resp.data;
            }
            catch (e) {
                return Promise.reject(new helper_2.BrowserRequestError(e));
            }
        });
    }
    delete(namespace, name) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this._axios.delete(`/apis/${common_1.devWorkspaceApiGroup}/${common_1.devworkspaceVersion}/namespaces/${namespace}/${common_1.devworkspacePluralSubresource}/${name}`, {
                headers: {
                    'content-type': 'application/json; charset=utf-8',
                },
                data: models_1.deletionOptions(models_1.deletePolicy.Background)
            });
        });
    }
    /**
     * Patch a devworkspace
     * @param devworkspace The devworkspace you want to patch
     */
    patch(namespace, name, patches) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.createPatch(namespace, name, patches);
        });
    }
    changeStatus(namespace, name, started) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.createPatch(namespace, name, [{
                    op: 'replace',
                    path: '/spec/started',
                    value: started
                }]);
        });
    }
    createPatch(namespace, name, patches) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const resp = yield this._axios.patch(`/apis/${common_1.devWorkspaceApiGroup}/${common_1.devworkspaceVersion}/namespaces/${namespace}/${common_1.devworkspacePluralSubresource}/${name}`, patches, {
                    headers: {
                        'Content-type': 'application/json-patch+json',
                    },
                });
                return resp.data;
            }
            catch (e) {
                return Promise.reject(new helper_2.BrowserRequestError(e));
            }
        });
    }
}
exports.RestDevWorkspaceApi = RestDevWorkspaceApi;


/***/ }),

/***/ "./src/common/converter.ts":
/*!*********************************!*\
  !*** ./src/common/converter.ts ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * Copyright (c) 2018-2021 Red Hat, Inc.
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *   Red Hat, Inc. - initial API and implementation
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.devWorkspaceToDevfile = exports.devfileToDevWorkspace = void 0;
const _1 = __webpack_require__(/*! . */ "./src/common/index.ts");
function devfileToDevWorkspace(devfile, routingClass, started) {
    devfile.metadata.annotations = {};
    const template = {
        apiVersion: `${_1.devWorkspaceApiGroup}/${_1.devworkspaceVersion}`,
        kind: 'DevWorkspace',
        metadata: devfile.metadata,
        spec: {
            started,
            routingClass,
            template: {
                components: []
            }
        }
    };
    if (devfile.projects) {
        template.spec.template.projects = devfile.projects;
    }
    if (devfile.components) {
        template.spec.template.components = devfile.components;
    }
    if (devfile.commands) {
        template.spec.template.commands = devfile.commands;
    }
    if (devfile.events) {
        template.spec.template.events = devfile.events;
    }
    return template;
}
exports.devfileToDevWorkspace = devfileToDevWorkspace;
function devWorkspaceToDevfile(devworkspace) {
    const template = {
        schemaVersion: '2.0.0',
        metadata: {
            name: devworkspace.metadata.name,
            namespace: devworkspace.metadata.namespace
        },
    };
    if (devworkspace.spec.template.projects) {
        template.projects = devworkspace.spec.template.projects;
    }
    if (devworkspace.spec.template.components) {
        template.components = filterPluginComponents(devworkspace.spec.template.components);
    }
    if (devworkspace.spec.template.commands) {
        template.commands = devworkspace.spec.template.commands;
    }
    if (devworkspace.spec.template.events) {
        template.events = devworkspace.spec.template.events;
    }
    return template;
}
exports.devWorkspaceToDevfile = devWorkspaceToDevfile;
// Filter plugins from components
function filterPluginComponents(components) {
    return components.filter(comp => !("plugin" in comp));
}


/***/ }),

/***/ "./src/common/helper.ts":
/*!******************************!*\
  !*** ./src/common/helper.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * Copyright (c) 2018-2021 Red Hat, Inc.
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *   Red Hat, Inc. - initial API and implementation
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.delay = void 0;
const delay = (ms = 500) => {
    return new Promise(resolve => setTimeout(resolve, ms));
};
exports.delay = delay;


/***/ }),

/***/ "./src/common/index.ts":
/*!*****************************!*\
  !*** ./src/common/index.ts ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * Copyright (c) 2018-2021 Red Hat, Inc.
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *   Red Hat, Inc. - initial API and implementation
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.devWorkspaceApiGroup = exports.projectApiGroup = exports.projectRequestId = exports.projectsId = exports.devworkspaceTemplateSubresource = exports.devworkspaceSingularSubresource = exports.devworkspacePluralSubresource = exports.devworkspaceVersion = void 0;
exports.devworkspaceVersion = 'v1alpha2';
exports.devworkspacePluralSubresource = 'devworkspaces';
exports.devworkspaceSingularSubresource = 'devworkspace';
exports.devworkspaceTemplateSubresource = 'devworkspacetemplates';
exports.projectsId = 'projects';
exports.projectRequestId = 'projectrequests';
exports.projectApiGroup = 'project.openshift.io';
exports.devWorkspaceApiGroup = 'workspace.devfile.io';


/***/ }),

/***/ "./src/common/models.ts":
/*!******************************!*\
  !*** ./src/common/models.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * Copyright (c) 2018-2021 Red Hat, Inc.
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *   Red Hat, Inc. - initial API and implementation
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.deletionOptions = exports.deletePolicy = exports.projectRequestModel = void 0;
const _1 = __webpack_require__(/*! . */ "./src/common/index.ts");
const projectRequestModel = (namespace) => {
    return {
        apiVersion: `${_1.projectApiGroup}/v1`,
        kind: 'ProjectRequest',
        metadata: {
            name: namespace,
        },
    };
};
exports.projectRequestModel = projectRequestModel;
var deletePolicy;
(function (deletePolicy) {
    deletePolicy["Background"] = "Background";
    deletePolicy["Foreground"] = "Foreground";
})(deletePolicy = exports.deletePolicy || (exports.deletePolicy = {}));
const deletionOptions = (policy) => {
    return {
        apiVersion: 'v1',
        kind: 'DeleteOptions',
        propagationPolicy: policy
    };
};
exports.deletionOptions = deletionOptions;


/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * Copyright (c) 2018-2021 Red Hat, Inc.
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *   Red Hat, Inc. - initial API and implementation
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.container = exports.DevWorkspaceClient = void 0;
__exportStar(__webpack_require__(/*! ./common/converter */ "./src/common/converter.ts"), exports);
__exportStar(__webpack_require__(/*! ./common/index */ "./src/common/index.ts"), exports);
__exportStar(__webpack_require__(/*! ./types */ "./src/types.ts"), exports);
__exportStar(__webpack_require__(/*! ./browser/index */ "./src/browser/index.ts"), exports);
// We have to load these with require so that in the browser side module nothing fails when they aren't included in the webpack bundle
const client = __webpack_require__(/*! ./node/client */ "./src/node/client.ts").DevWorkspaceClient;
exports.DevWorkspaceClient = client;
const container = __webpack_require__(/*! ./node/inversify.config */ "./src/node/inversify.config.ts").container;
exports.container = container;


/***/ }),

/***/ "./src/node/client.ts":
/*!****************************!*\
  !*** ./src/node/client.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



/***/ }),

/***/ "./src/node/inversify.config.ts":
/*!**************************************!*\
  !*** ./src/node/inversify.config.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



/***/ }),

/***/ "./src/types.ts":
/*!**********************!*\
  !*** ./src/types.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * Copyright (c) 2018-2021 Red Hat, Inc.
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *   Red Hat, Inc. - initial API and implementation
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.INVERSIFY_TYPES = void 0;
exports.INVERSIFY_TYPES = {
    IDevWorkspaceClient: Symbol('IDevWorkspaceClient'),
    INodeApiFactory: Symbol('Factory<NodeApi>'),
    IDevWorkspaceNodeClientApi: Symbol('IDevWorkspaceNodeClientApi'),
    IDevWorkspaceNodeTemplateApi: Symbol('IDevWorkspaceNodeTemplateApi'),
    IDevWorkspaceNodeApi: Symbol('IDevWorkspaceNodeApi'),
    IDevWorkspaceNodeCheApi: Symbol('IDevWorkspaceNodeCheApi')
};


/***/ })

/******/ });
});
//# sourceMappingURL=client.js.map